# Properties file which configures the operation of the JDK 
# logging facility.

# The system will look for this config file, first using 
# a System property specified at startup: 
# 
# >java -Djava.util.logging.config.file=myLoggingConfigFilePath 
# 
# If this property is not specified, then the config file is 
# retrieved from its default location at: 
# 
# JDK_HOME/jre/lib/logging.properties

# Global logging properties. 
# ------------------------------------------ 
# The set of handlers to be loaded upon startup. 
# Comma-separated list of class names. 
# (? LogManager docs say no comma here, but JDK example has comma.) 
handlers=java.util.logging.FileHandler, java.util.logging.ConsoleHandler
#handlers=java.util.logging.ConsoleHandler

# Default global logging level. 
# Loggers and Handlers may override this level 
#.level=INFO
.level=ALL

# Loggers 
# ------------------------------------------ 
# Loggers are usually attached to packages. 
# Here, the level for each package is specified. 
# The global level is used by default, so levels 
# specified here simply act as an override. 
#myapp.ui.level=ALL 
#myapp.business.level=CONFIG 
#myapp.data.level=SEVERE
sfs.level=SEVERE
sfs.db.level=WARNING
sfs.util.level=SEVERE

# Handlers 
# -----------------------------------------

# --- ConsoleHandler --- 
# Override of global logging level 
#java.util.logging.ConsoleHandler.level=SEVERE 
java.util.logging.ConsoleHandler.level=WARNING
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter

# --- FileHandler --- 
# Override of global logging level 
java.util.logging.FileHandler.level=SEVERE

# Naming style for the output file: 
# (The output file is placed in the directory 
# defined by the "user.home" System property.) 
#java.util.logging.FileHandler.pattern=%h/java%u.log
java.util.logging.FileHandler.pattern=logs/is4%u.log

# Limiting size of output file in bytes: 
java.util.logging.FileHandler.limit=500000

# Number of output files to cycle through, by appending an 
# integer to the base file name: 
java.util.logging.FileHandler.count=3

# Style of output (Simple or XML): 
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
